name: CI|CD Pipeline

env:
  ACTIONS_STEP_DEBUG: true

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore
        run: dotnet restore

      - name: Format check
        run: dotnet format --verify-no-changes --verbosity normal

      - name: Build
        run: dotnet build src/GameHub.QuizMaster/GameHub.QuizMaster.csproj --configuration Release

      - name: Publish
        run: dotnet publish src/GameHub.QuizMaster/GameHub.QuizMaster.csproj --configuration Release --self-contained true --output ./publish/quiz-master/
        
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Print working directory
        run: pwd

      - name: List files in working directory
        run: ls -l

      - name: List files in docker directory
        run: ls -l docker
          
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/quiz-master:latest -f docker/Dockerfile .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/quiz-master:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Deploy to remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/quiz-master:latest
            docker stop quiz-master || true
            docker rm quiz-master || true
            docker run -d --name quiz-master -p 8080:8080 -p 8443:8443 ${{ secrets.DOCKER_HUB_USERNAME }}/quiz-master:latest